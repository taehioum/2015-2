                      | #######################################################################
                      | # Test for copying block of size 63;
                      | #######################################################################
  0x000:              | 	.pos 0
  0x000: 30f4f4020000 | main:	irmovl Stack, %esp  	# Set up stack pointer
  0x006: 30f5f4020000 | 	irmovl Stack, %ebp  	# Set up base pointer
                      | 
                      | 	# Set up arguments for copy function and then invoke it
  0x00c: 30f03f000000 | 	irmovl $63, %eax		# src and dst have 63 elements
  0x012: a00f         | 	pushl %eax
  0x014: 30f0b4010000 | 	irmovl dest, %eax	# dst array
  0x01a: a00f         | 	pushl %eax
  0x01c: 30f0ac000000 | 	irmovl src, %eax	# src array
  0x022: a00f         | 	pushl %eax
  0x024: 802a000000   | 	call ncopy		 
  0x029: 00           | 	halt			# should halt with num nonzeros in %eax
  0x02a:              | StartFun:
                      | #/* $begin ncopy-ys */
                      | ##################################################################
                      | # ncopy.ys - Copy a src block of len ints to dst.
                      | # Return the number of positive ints (>0) contained in src.
                      | #
                      | # Include your name and ID here.
                      | # 2012-11114 TAEHWOI OUM.
                      | #
                      | # Describe how and why you modified the baseline code.
                      | # 1. since looping is expensive, move two elements at once.
                      | # 2. use cmove to add cnt. -TODO
                      | ##################################################################
                      | # Do not modify this portion
                      | # Function prologue.
  0x02a:              | ncopy:	
  0x02a: a05f         |   pushl %ebp		# Save old frame pointer
  0x02c: 2045         | 	rrmovl %esp,%ebp	# Set up new frame pointer
  0x02e: a06f         | 	pushl %esi		# Save callee-save regs
  0x030: a03f         | 	pushl %ebx
  0x032: a07f         | 	pushl %edi
  0x034: 503508000000 | 	mrmovl 8(%ebp),%ebx	# src
  0x03a: 50150c000000 | 	mrmovl 12(%ebp),%ecx	# dst
  0x040: 502510000000 | 	mrmovl 16(%ebp),%edx	# len
                      | 
                      | ##################################################################
                      | # You can modify this portion
                      | # small cases -> hard coding
                      | # 1 elements
                      | # Loop header
  0x046: 6300         |   xorl %eax, %eax #cnt = 0
  0x048: 6222         |   andl %edx,%edx		# len <= 0?
  0x04a: 71a2000000   |   jle Done		# if so, goto Done:
  0x04f: c0f2ffffffff |   iaddl $-1,%edx
  0x055: 6222         |   andl %edx,%edx		# len == 1?
  0x057: 7389000000   |   je One
  0x05c: c0f201000000 |   iaddl $1,%edx
                      | 
  0x062:              | Loop:
  0x062: 6222         |   andl %edx,%edx		# len <= 0?
  0x064: 506300000000 |   mrmovl (%ebx), %esi #tmp
  0x06a: 406100000000 |   rmmovl %esi, (%ecx)
  0x070: 6266         |   andl %esi, %esi #esi > 0?
                      |   #addl %edi, %eax #update count
  0x072: c0f304000000 |   iaddl $4, %ebx
  0x078: c0f104000000 |   iaddl $4, %ecx
  0x07e: c0f2ffffffff |   iaddl $-1, %edx
  0x084: 7562000000   |   jge Loop
                      | 
  0x089:              | One:
  0x089: 506300000000 |   mrmovl (%ebx), %esi #%esi = tmp
  0x08f: 406100000000 |   rmmovl %esi, (%ecx)
  0x095: 6266         |   andl %esi, %esi #esi <= 0?
  0x097: 71a2000000   |   jle Done
  0x09c: c0f001000000 |   iaddl $1, %eax
                      | ##################################################################
                      | # Do not modify the following section of code
                      | # Function epilogue.
  0x0a2:              |   Done:
  0x0a2: b07f         |   popl %edi               # Restore callee-save registers
  0x0a4: b03f         |   popl %ebx
  0x0a6: b06f         |   popl %esi
  0x0a8: d0           |   leave
                      | ##################################################################
                      | # Keep the following label at the end of your function
  0x0a9:              |   End:
                      | #/* $end ncopy-ys */
  0x0a9:              | EndFun:
                      | 
                      | ###############################
                      | # Source and destination blocks 
                      | ###############################
  0x0ac:              | 	.align 4
  0x0ac:              | src:
  0x0ac: ffffffff     | 	.long -1
  0x0b0: feffffff     | 	.long -2
  0x0b4: fdffffff     | 	.long -3
  0x0b8: 04000000     | 	.long 4
  0x0bc: 05000000     | 	.long 5
  0x0c0: faffffff     | 	.long -6
  0x0c4: 07000000     | 	.long 7
  0x0c8: f8ffffff     | 	.long -8
  0x0cc: 09000000     | 	.long 9
  0x0d0: 0a000000     | 	.long 10
  0x0d4: 0b000000     | 	.long 11
  0x0d8: f4ffffff     | 	.long -12
  0x0dc: f3ffffff     | 	.long -13
  0x0e0: 0e000000     | 	.long 14
  0x0e4: f1ffffff     | 	.long -15
  0x0e8: f0ffffff     | 	.long -16
  0x0ec: 11000000     | 	.long 17
  0x0f0: 12000000     | 	.long 18
  0x0f4: edffffff     | 	.long -19
  0x0f8: 14000000     | 	.long 20
  0x0fc: 15000000     | 	.long 21
  0x100: 16000000     | 	.long 22
  0x104: 17000000     | 	.long 23
  0x108: e8ffffff     | 	.long -24
  0x10c: 19000000     | 	.long 25
  0x110: 1a000000     | 	.long 26
  0x114: 1b000000     | 	.long 27
  0x118: 1c000000     | 	.long 28
  0x11c: 1d000000     | 	.long 29
  0x120: e2ffffff     | 	.long -30
  0x124: 1f000000     | 	.long 31
  0x128: 20000000     | 	.long 32
  0x12c: 21000000     | 	.long 33
  0x130: deffffff     | 	.long -34
  0x134: ddffffff     | 	.long -35
  0x138: dcffffff     | 	.long -36
  0x13c: 25000000     | 	.long 37
  0x140: 26000000     | 	.long 38
  0x144: 27000000     | 	.long 39
  0x148: d8ffffff     | 	.long -40
  0x14c: 29000000     | 	.long 41
  0x150: d6ffffff     | 	.long -42
  0x154: d5ffffff     | 	.long -43
  0x158: 2c000000     | 	.long 44
  0x15c: d3ffffff     | 	.long -45
  0x160: d2ffffff     | 	.long -46
  0x164: d1ffffff     | 	.long -47
  0x168: 30000000     | 	.long 48
  0x16c: 31000000     | 	.long 49
  0x170: ceffffff     | 	.long -50
  0x174: cdffffff     | 	.long -51
  0x178: ccffffff     | 	.long -52
  0x17c: 35000000     | 	.long 53
  0x180: 36000000     | 	.long 54
  0x184: 37000000     | 	.long 55
  0x188: c8ffffff     | 	.long -56
  0x18c: c7ffffff     | 	.long -57
  0x190: c6ffffff     | 	.long -58
  0x194: c5ffffff     | 	.long -59
  0x198: c4ffffff     | 	.long -60
  0x19c: c3ffffff     | 	.long -61
  0x1a0: c2ffffff     | 	.long -62
  0x1a4: c1ffffff     | 	.long -63
  0x1a8: fadebc00     | 	.long 0xbcdefa # This shouldn't get moved
                      | 
  0x1b0:              | 	.align 16
  0x1b0:              | Predest:
  0x1b0: fadebc00     | 	.long 0xbcdefa
  0x1b4:              | dest:
  0x1b4: abefcd00     | 	.long 0xcdefab
  0x1b8: abefcd00     | 	.long 0xcdefab
  0x1bc: abefcd00     | 	.long 0xcdefab
  0x1c0: abefcd00     | 	.long 0xcdefab
  0x1c4: abefcd00     | 	.long 0xcdefab
  0x1c8: abefcd00     | 	.long 0xcdefab
  0x1cc: abefcd00     | 	.long 0xcdefab
  0x1d0: abefcd00     | 	.long 0xcdefab
  0x1d4: abefcd00     | 	.long 0xcdefab
  0x1d8: abefcd00     | 	.long 0xcdefab
  0x1dc: abefcd00     | 	.long 0xcdefab
  0x1e0: abefcd00     | 	.long 0xcdefab
  0x1e4: abefcd00     | 	.long 0xcdefab
  0x1e8: abefcd00     | 	.long 0xcdefab
  0x1ec: abefcd00     | 	.long 0xcdefab
  0x1f0: abefcd00     | 	.long 0xcdefab
  0x1f4: abefcd00     | 	.long 0xcdefab
  0x1f8: abefcd00     | 	.long 0xcdefab
  0x1fc: abefcd00     | 	.long 0xcdefab
  0x200: abefcd00     | 	.long 0xcdefab
  0x204: abefcd00     | 	.long 0xcdefab
  0x208: abefcd00     | 	.long 0xcdefab
  0x20c: abefcd00     | 	.long 0xcdefab
  0x210: abefcd00     | 	.long 0xcdefab
  0x214: abefcd00     | 	.long 0xcdefab
  0x218: abefcd00     | 	.long 0xcdefab
  0x21c: abefcd00     | 	.long 0xcdefab
  0x220: abefcd00     | 	.long 0xcdefab
  0x224: abefcd00     | 	.long 0xcdefab
  0x228: abefcd00     | 	.long 0xcdefab
  0x22c: abefcd00     | 	.long 0xcdefab
  0x230: abefcd00     | 	.long 0xcdefab
  0x234: abefcd00     | 	.long 0xcdefab
  0x238: abefcd00     | 	.long 0xcdefab
  0x23c: abefcd00     | 	.long 0xcdefab
  0x240: abefcd00     | 	.long 0xcdefab
  0x244: abefcd00     | 	.long 0xcdefab
  0x248: abefcd00     | 	.long 0xcdefab
  0x24c: abefcd00     | 	.long 0xcdefab
  0x250: abefcd00     | 	.long 0xcdefab
  0x254: abefcd00     | 	.long 0xcdefab
  0x258: abefcd00     | 	.long 0xcdefab
  0x25c: abefcd00     | 	.long 0xcdefab
  0x260: abefcd00     | 	.long 0xcdefab
  0x264: abefcd00     | 	.long 0xcdefab
  0x268: abefcd00     | 	.long 0xcdefab
  0x26c: abefcd00     | 	.long 0xcdefab
  0x270: abefcd00     | 	.long 0xcdefab
  0x274: abefcd00     | 	.long 0xcdefab
  0x278: abefcd00     | 	.long 0xcdefab
  0x27c: abefcd00     | 	.long 0xcdefab
  0x280: abefcd00     | 	.long 0xcdefab
  0x284: abefcd00     | 	.long 0xcdefab
  0x288: abefcd00     | 	.long 0xcdefab
  0x28c: abefcd00     | 	.long 0xcdefab
  0x290: abefcd00     | 	.long 0xcdefab
  0x294: abefcd00     | 	.long 0xcdefab
  0x298: abefcd00     | 	.long 0xcdefab
  0x29c: abefcd00     | 	.long 0xcdefab
  0x2a0: abefcd00     | 	.long 0xcdefab
  0x2a4: abefcd00     | 	.long 0xcdefab
  0x2a8: abefcd00     | 	.long 0xcdefab
  0x2ac: abefcd00     | 	.long 0xcdefab
  0x2b0:              | Postdest:
  0x2b0: bcfade00     | 	.long 0xdefabc
                      | 
  0x2b4:              | .align 4
                      | # Run time stack
  0x2b4: 00000000     | 	.long 0
  0x2b8: 00000000     | 	.long 0
  0x2bc: 00000000     | 	.long 0
  0x2c0: 00000000     | 	.long 0
  0x2c4: 00000000     | 	.long 0
  0x2c8: 00000000     | 	.long 0
  0x2cc: 00000000     | 	.long 0
  0x2d0: 00000000     | 	.long 0
  0x2d4: 00000000     | 	.long 0
  0x2d8: 00000000     | 	.long 0
  0x2dc: 00000000     | 	.long 0
  0x2e0: 00000000     | 	.long 0
  0x2e4: 00000000     | 	.long 0
  0x2e8: 00000000     | 	.long 0
  0x2ec: 00000000     | 	.long 0
  0x2f0: 00000000     | 	.long 0
                      | 
  0x2f4:              | Stack:
